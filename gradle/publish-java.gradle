allprojects {
    pluginManager.withPlugin('maven-publish') {
        apply plugin: 'java-library'

        java {
            withJavadocJar()
            withSourcesJar()
        }

        publishing {
            publications {
                maven(MavenPublication) {
                    it.groupId = project.group.toString()
                    it.artifactId = project.name.toString()
                    it.version = project.version.toString()

                    from components.java
                    versionMapping {
                        usage('java-api') { fromResolutionOf('compileClasspath') }
                        usage('java-runtime') { fromResolutionOf('runtimeClasspath') }
                    }

                    pom {
                        String displayName = property('repository-name')
                        String ownerName = property('repository-owner-name')
                        if (!ownerName.isEmpty()) {
                            displayName = "$ownerName: $displayName"
                        }
                        String subProjectName = project.path.substring(1).replace(':', ': ')
                        if (!subProjectName.isEmpty()) {
                            displayName = "$displayName: $subProjectName"
                        }

                        name = displayName
                        description = displayName
                        url = property('repository-html-url')
                        scm {
                            url = property('repository-html-url')
                        }
                        licenses {
                            license {
                                name = property('repository-license-name')
                                url = property('repository-license-html-url')
                            }
                        }
                    }
                }
            }

            repositories {
                maven {
                    name = 'ossrh'
                    if (project.version.toString().endsWith('-SNAPSHOT')) {
                        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
                    } else {
                        url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                    }

                    credentials {
                        username = findProperty('ossrh.publish.username')?.toString()
                        password = findProperty('ossrh.publish.password')?.toString()
                    }
                }
            }
        }

        pluginManager.withPlugin('signing') {
            signing {
                sign publishing.publications.maven
            }
        }
    }
}
