/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

buildscript {
    String pluginRootGroupId = project.ext.pluginRootGroupId = "name.remal.gradle-plugins.${rootProject.name}"
    String pluginRootArtifactId = project.ext.pluginRootArtifactId = rootProject.name
    String pluginRootSnapshotVersion = project.ext.pluginRootSnapshotVersion = '2-SNAPSHOT'
    dependencies {
        //classpath("$pluginRootGroupId:$pluginRootArtifactId:$pluginRootSnapshotVersion") { version { strictly(pluginRootSnapshotVersion) } }
        classpath 'name.remal.gradle-plugins.toolkit:build-logic:0.50.1'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

allprojects {
    group = project.pluginRootGroupId
    version = project.pluginRootSnapshotVersion
}

apply plugin: 'name.remal.toolkit.build-logic'

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

apply plugin: 'java-gradle-plugin'

configurations.optional.extendsFrom(configurations.correspondingKotlinPlugin)

dependencies {
}

gradlePlugin {
    plugins {
        'name.remal.test-source-sets' {
            id = 'name.remal.test-source-sets'
            implementationClass = 'name.remal.gradleplugins.testsourcesets.TestSourceSetsPlugin'
            displayName = 'A plugin that creates `testSourceSets` extension'
            description = property('repository-description')
        }
        'name.remal.integration-tests' {
            id = 'name.remal.integration-tests'
            implementationClass = 'name.remal.gradleplugins.testsourcesets.IntegrationTestsPlugin'
            displayName = 'A plugin that creates `integration` source set for integration tests'
            description = displayName
        }
    }
}
